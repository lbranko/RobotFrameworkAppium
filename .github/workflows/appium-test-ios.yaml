name: Run iOS Tests on macOS Simulator

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to run the workflow on'
        required: false
        default: 'main'

jobs:
  run-ios-tests:
    runs-on: macos-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Install Appium
        run: |
          npm install -g appium
          appium driver install xcuitest
          appium driver list

      - name: Start Appium server
        run: |
          appium --log-level debug > appium.log 2>&1 &
          sleep 5

      - name: Download iOS .app file from GitHub Releases
        run: |
          ZIP_URL=$(curl -s -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
                         -H "Accept: application/vnd.github.v3+json" \
                         "https://api.github.com/repos/lbranko/RobotFrameworkAppium/releases/latest" | jq -r '.assets[] | select(.name=="Runner.zip") | .browser_download_url')

          echo "Download URL: $ZIP_URL"

          if [ -z "$ZIP_URL" ] || [ "$ZIP_URL" == "null" ]; then
            echo "❌ Greška: Nije pronađen URL za Runner.zip!"
            exit 1
          fi

          curl -L -o ~/Runner.zip "$ZIP_URL"

          echo "Preuzet fajl:"
          ls -lah ~/Runner.zip
          file ~/Runner.zip

#      - name: Debug - Pogledaj sadržaj preuzetog "ZIP-a"
#        run: |
#          echo "Prvih 20 linija preuzetog fajla:"
#          cat ~/Runner.zip | head -n 20

#      - name: Debug - Provjeri GitHub Releases API
#        run: |
#          curl -s -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
#          -H "Accept: application/vnd.github.v3+json" \
#           "https://api.github.com/repos/lbranko/RobotFrameworkAppium/releases/latest" | jq .

      - name: Start iOS Simulator
        run: |
          sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer
          SIMULATOR_ID=$(xcrun simctl list devices available | grep "iPhone 15" | awk -F '[()]' '{print $2}' | head -n 1)
          xcrun simctl boot "$SIMULATOR_ID"

      - name: Unzip iOS .app file
        run: |
          unzip ~/Runner.zip -d ~/Runner
          APP_PATH=$(find ~/Runner -type d -name "*.app" ! -path "*/__MACOSX/*" | head -n 1)
#          echo "APP_PATH=$APP_PATH" >> $GITHUB_ENV
#          echo "Extracted .app path: $APP_PATH"

      - name: Install app manually
        run: |
          xcrun simctl install booted /Users/runner/Runner/Runner.app
          xcrun simctl launch booted com.decode.rightvybe

      - name: Debug - List extracted files
        run: |
          ls -lah ~/Runner
          find ~/Runner -name "*.app"

      - name: Debug - Check .app existence
        run: |
          if [ -d "$APP_PATH" ]; then
            echo "✅ .app file exists: $APP_PATH"
          else
            echo "❌ .app file NOT found!"
            exit 1
          fi

      - name: Debug - Check .app validity
        run: |
          file "$APP_PATH"
          ls -lah "$APP_PATH"

      - name: List available iOS Simulators
        run: |
          xcrun simctl list devices available

      - name: Configure code signing (no signing)
        run: |
          defaults write com.apple.dt.Xcode IDESkipPackagePluginFingerprintValidatation -bool YES
          security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Library/Xcode/Agents/SimulatorTrampoline.app/Contents/Resources/SimulatorTrampolineCert.pem

      - name: Run iOS tests
        run: |
          robot -d Results Tests/

      - name: Upload iOS test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ios-test-results
          path: Results/iOS

      - name: Upload Appium logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: appium-logs
          path: appium.log